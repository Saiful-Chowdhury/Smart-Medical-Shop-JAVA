/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author HP
 */
import java.sql.Connection;
import dou.Connectionprovider;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class UpdateUser extends javax.swing.JFrame {

    public String emailPattern = "^[a-zA-Z0-9]+[@]+[a-zA-Z0-9]+[.]+[a-zA-Z0-9]+$";
    public String mobileNumberPattern = "^[0-9]*$";
    
    String username="";

    /**
     * Creates new form UpdateUser
     */
    public UpdateUser() {
        initComponents();
        setLocationRelativeTo(null);
    }
    public UpdateUser(String tempUserName) {
        initComponents();
        username=tempUserName;
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        userUpdateSearch = new javax.swing.JTextField();
        userUpdatesearchBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        userUpdateCombo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        userUpdatePhone = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        userUpdateUserName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        userUpdateEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        userUpdateAddress = new javax.swing.JTextField();
        userUpdateSaveBtn = new javax.swing.JButton();
        updateUserBackBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Update User");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 16, 263, -1));
        getContentPane().add(userUpdateSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(323, 93, 251, -1));

        userUpdatesearchBtn.setText("Search");
        userUpdatesearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userUpdatesearchBtnActionPerformed(evt);
            }
        });
        getContentPane().add(userUpdatesearchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(592, 93, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("User Email");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 93, 88, -1));

        jLabel3.setText("UserRole");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 144, 64, -1));

        userUpdateCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Salesman", " ", " " }));
        userUpdateCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userUpdateComboActionPerformed(evt);
            }
        });
        getContentPane().add(userUpdateCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 172, -1, -1));

        jLabel4.setText("Phone");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(474, 159, -1, -1));
        getContentPane().add(userUpdatePhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(474, 187, 228, 33));

        jLabel5.setText("UserName");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        userUpdateUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userUpdateUserNameActionPerformed(evt);
            }
        });
        getContentPane().add(userUpdateUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 242, 34));

        jLabel6.setText("Email");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));
        getContentPane().add(userUpdateEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 242, 35));

        jLabel7.setText("Address");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(474, 227, -1, -1));
        getContentPane().add(userUpdateAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 260, 239, 36));

        userUpdateSaveBtn.setText("Update");
        userUpdateSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userUpdateSaveBtnActionPerformed(evt);
            }
        });
        getContentPane().add(userUpdateSaveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 320, -1, -1));

        updateUserBackBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        updateUserBackBtn.setText("Back");
        updateUserBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateUserBackBtnActionPerformed(evt);
            }
        });
        getContentPane().add(updateUserBackBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 30, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userUpdateUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userUpdateUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userUpdateUserNameActionPerformed

    private void userUpdateComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userUpdateComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userUpdateComboActionPerformed

    private void updateUserBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateUserBackBtnActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new ViewUser(username).setVisible(true);
    }//GEN-LAST:event_updateUserBackBtnActionPerformed

    private void userUpdatesearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userUpdatesearchBtnActionPerformed
        // TODO add your handling code here:
        int checkUserExist = 0;
        String email = userUpdateSearch.getText();
        if (email.equals("")) {
            JOptionPane.showMessageDialog(null, "Email Is Required.");
        } else {
            try {
                Connection con = Connectionprovider.getCon();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("select *from appuser where email= '" + email + "'");
                while (rs.next()) {
                    userUpdateSearch.setEditable(false);
                    checkUserExist = 1;
                    userUpdateUserName.setText(rs.getString("name"));
                    userUpdateEmail.setText(rs.getString("email"));
                    userUpdatePhone.setText(rs.getString("mobileNumber"));
                    userUpdateAddress.setText(rs.getString("address"));

                    if (rs.getString("userRole").equals("Admin")) {
                        userUpdateCombo.removeAllItems();
                        userUpdateCombo.addItem("Admin");
                        userUpdateCombo.addItem("SalesMan");

                    } else {
                        userUpdateCombo.removeAllItems();
                        userUpdateCombo.addItem("SalesMan");
                        userUpdateCombo.addItem("Admin");
                    }

                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            if (checkUserExist == 0) {
                JOptionPane.showMessageDialog(null, "User doesn't exists.");
            }
        }
    }//GEN-LAST:event_userUpdatesearchBtnActionPerformed

    private void userUpdateSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userUpdateSaveBtnActionPerformed
        // TODO add your handling code here:
        String userRole = (String) userUpdateCombo.getSelectedItem();
        String name = userUpdateUserName.getText();
        String email = userUpdateEmail.getText();
        String mobileNumber = userUpdatePhone.getText();

        String address = userUpdateAddress.getText();
        if (name.equals("")) {
            JOptionPane.showMessageDialog(null, "This field can't empty");
        } else if (email.equals("")) {
            JOptionPane.showMessageDialog(null, "This field can't empty");
        } else if (!email.matches(emailPattern)) {
            JOptionPane.showMessageDialog(null, "Invalid Email Address");
        } else if (address.equals("")) {
            JOptionPane.showMessageDialog(null, "This field can't empty");
        } else if (mobileNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "This field can't empty");
        } else {
            try {
                Connection con = Connectionprovider.getCon();
                PreparedStatement ps = con.prepareStatement("update appuser set userRole=?, name=?, email=?, mobileNumber=?, address=? where email=?");
                ps.setString(1, userRole);
                ps.setString(2, name);
                ps.setString(3, email);
                ps.setString(4, mobileNumber);
                ps.setString(5, address);
                ps.setString(6, email);  // Set the email for the WHERE clause
              

                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "User Succesfully Added");
                setVisible(false);
                new UpdateUser().setVisible(true);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);

            }
        }
    }//GEN-LAST:event_userUpdateSaveBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton updateUserBackBtn;
    private javax.swing.JTextField userUpdateAddress;
    private javax.swing.JComboBox<String> userUpdateCombo;
    private javax.swing.JTextField userUpdateEmail;
    private javax.swing.JTextField userUpdatePhone;
    private javax.swing.JButton userUpdateSaveBtn;
    private javax.swing.JTextField userUpdateSearch;
    private javax.swing.JTextField userUpdateUserName;
    private javax.swing.JButton userUpdatesearchBtn;
    // End of variables declaration//GEN-END:variables
}
